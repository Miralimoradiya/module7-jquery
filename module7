1) What is jQuery?
Ans:    jQuery is a fast, lightweight, and feature-rich JavaScript library that simplifies client-side 
        web development. It provides a wide range of tools and utilities for manipulating HTML documents, handling events, making AJAX requests, and animating elements, among other things. jQuery was created to address the complexities and cross-browser compatibility issues that web developers often encountered when working with raw JavaScript.



2) How to Apply CSS Using JQuery, How to Add Class and Remove Class in Jquery, JQuery Animation?
Ans:    To apply CSS using jQuery, add or remove classes, and perform animations, you can use the 
        following jQuery methods:

        1. Applying CSS Using jQuery:
            You can use the .css() method in jQuery to apply CSS styles to HTML elements. Here's how you can use it:

            You can also set multiple CSS properties at once using an object:
                // Set multiple CSS properties
                $(selector).css({ property1: value1, property2: value2 });
                // Example: Change background color and font size of a div
                $("#myDiv").css({ "background-color": "blue", "font-size": "16px" });

        2. Adding and Removing Classes:
            You can use the .addClass() and .removeClass() methods to add or remove classes from HTML elements. Here's how:
                // Add a class
                $(selector).addClass(className);
                // Remove a class
                $(selector).removeClass(className);
                // Example: Add and remove a "highlight" class from a button
                $("#myButton").addClass("highlight");
                $("#myButton").removeClass("highlight");

        3. jQuery Animation:
            jQuery provides several methods for creating animations, such as .animate(), .slideDown(), .slideUp(), .slideToggle(), .fadeIn(), and .fadeOut(). These methods allow you to smoothly change CSS properties over a specified duration.

            Here's an example of using .slideUp() and .slideDown() for a toggle effect:
                // Toggle visibility of a div with slide animation
                $("#toggleButton").click(function() {
                    $("#toggleDiv").slideToggle();
                });



3) How to create slider with animation?
Ans:         HTML structure:
            <!DOCTYPE html>
            <html lang="en">
            <head>
                <meta charset="UTF-8">
                <meta name="viewport" content="width=device-width, initial-scale=1.0">
                <link rel="stylesheet" href="styles.css">
                <title>Image Slider</title>
            </head>
            <body>
                <div class="slider-container">
                    <div class="slider">
                        <img src="image1.jpg" alt="Image 1">
                        <img src="image2.jpg" alt="Image 2">
                        <img src="image3.jpg" alt="Image 3">
                    </div>
                    <button id="prev">Previous</button>
                    <button id="next">Next</button>
                </div>
                <script src="script.js"></script>
            </body>
            </html>
        
        CSS (styles.css):
            /* Styles for the slider container */
            .slider-container {
                position: relative;
                overflow: hidden;
                width: 400px;
                height: 300px;
            }
            /* Styles for the slider */
            .slider {
                display: flex;
                transition: transform 0.5s ease;
            }
            /* Styles for individual slides (images) */
            .slider img {
                width: 100%;
                height: 100%;
                object-fit: cover;
            }
            /* Styles for previous and next buttons */
            #prev, #next {
                position: absolute;
                top: 50%;
                transform: translateY(-50%);
                padding: 10px 20px;
                background-color: #333;
                color: #fff;
                border: none;
                cursor: pointer;
            }
            #prev {
                left: 10px;
            }
            #next {
                right: 10px;
            }

        JavaScript (script.js):
            document.addEventListener("DOMContentLoaded", function () {
                const slider = document.querySelector(".slider");
                const prevButton = document.querySelector("#prev");
                const nextButton = document.querySelector("#next");
                const slideWidth = slider.clientWidth;
                let currentIndex = 0;

                function goToSlide(index) {
                    if (index < 0) {
                        index = slider.children.length - 1;
                    } else if (index >= slider.children.length) {
                        index = 0;
                    }

                    slider.style.transform = `translateX(-${index * slideWidth}px)`;
                    currentIndex = index;
                }

                prevButton.addEventListener("click", () => {
                    goToSlide(currentIndex - 1);
                });

                nextButton.addEventListener("click", () => {
                    goToSlide(currentIndex + 1);
                });

                // Automatically advance the slider
                setInterval(() => {
                    goToSlide(currentIndex + 1);
                }, 3000); // Change slide every 3 seconds (adjust as needed)
            });

        This code creates a simple image slider that displays images in a loop with previous and next buttons. It uses CSS for styling and JavaScript for handling the animation and user interactions. Adjust the HTML, CSS, and JavaScript code to suit your specific slider requirements, such as adding more slides, customizing styles, or changing animation effects.